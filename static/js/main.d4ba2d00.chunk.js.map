{"version":3,"sources":["Images/HolidayImage.jpg","Components/GreetingCard.js","Components/CustomizeMessage.js","App.js","reportWebVitals.js","index.js"],"names":["GreetingCard","email","greeting","body","closing","setCustomize","preview","setPreview","className","src","HolidayImage","alt","onClick","mailto","url","encodeURIComponent","console","log","window","open","CustomizeMessage","setGreeting","setBody","setClosing","setEmail","style","color","htmlFor","name","id","type","value","onChange","event","target","placeholder","rows","preventDefault","App","query","URLSearchParams","location","search","useState","get","customize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4ba2d00.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/HolidayImage.8dd02547.jpg\";","import HolidayImage from '../Images/HolidayImage.jpg';\nimport '../App.css';\n\nfunction GreetingCard({ email, greeting, body, closing, setCustomize, preview, setPreview }) {\n\n    const continueEditing = () => {\n        setCustomize(true);\n        setPreview(false);\n    }\n\n    const sendEcard = () => {\n        let mailto = `mailto:${email}`;\n            mailto += '?subject=E-Card';\n            mailto += '&body=You have received an e-greeting card.';\n            mailto += '%0D%0A%0D%0A';\n            mailto += 'Go To Greeting Card';\n            mailto += '%0D%0A';\n    \n        let url = 'https://tesfa-worku.github.io/ecard';\n            url += `?greeting=${encodeURIComponent(greeting)}`;\n            url += `&body=${encodeURIComponent(body)}`;\n            url += `&closing=${encodeURIComponent(closing)}`;\n    \n            mailto += encodeURIComponent(url);\n    \n            console.log(mailto);\n    \n        window.open(mailto);\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <div>\n                    <img src={HolidayImage} className=\"App-logo\" alt=\"Holiday\" />\n                    <div className='neon-light'>\n                        Happy Holiday!\n                    </div>\n                </div>                \n                <p className='script'>{greeting}</p>\n                <p className='script'>{body}</p>\n                <p className='script'>{closing}</p>\n                {preview\n                    ? <div>\n                        <button className=\"button\" onClick={continueEditing}>Continue Editing</button><br />\n                        <br />\n                        <button className=\"button\" onClick={sendEcard}>Send</button>                        \n                    </div>                    \n                    : <button className=\"button\" onClick={() => setCustomize(true)}>Reshare This card</button>\n                }\n            </header>\n        </div>\n    );\n}\n\nexport default GreetingCard;","import HolidayImage from '../Images/HolidayImage.jpg';\nimport '../App.css';\n\nfunction CustomizeMessage({ email, greeting, body, closing, setGreeting, setBody, setClosing, setEmail, setPreview, setCustomize}) {    \n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        setPreview(true);\n        setCustomize(false);\n    }\n\n    return(\n        <div className='App-header'>\n            <div className=\"instructions\">\n                <img src={HolidayImage} className=\"thumb\" alt=\"Holiday\" />\n                <p className=''>\n                    <strong style={{color:'darkblue'}}>How to Reshare:</strong><br />\n                    Write your own <br />custom message <br /> below\n                </p>\n            </div>\n\n            <form>\n                <div>\n                    <label htmlFor=\"email\">Recipient Email</label><br />\n                    <input\n                        name=\"email\"\n                        id=\"email\"\n                        type=\"text\"\n                        value={email}\n                        onChange={(event) => setEmail(event.target.value)}\n                        placeholder=\"Recipient Email\"\n                    />\n                </div>\n\n                <br />\n\n                <div>\n                    <label htmlFor=\"greeting\">Greeting</label><br />\n                    <input\n                        name=\"greeting\"\n                        id=\"greeting\"\n                        type=\"text\"\n                        value={greeting}\n                        onChange={(event) => setGreeting(event.target.value)}\n                        placeholder=\"Greeting\"\n                    />\n                </div>\n\n                <br />\n\n                <div>\n                    <label htmlFor=\"body\">Body</label><br />\n                    <textarea\n                        name=\"body\"\n                        id=\"body\"\n                        value={body}\n                        onChange={event => setBody(event.target.value)}\n                        placeholder=\"Body\"\n                        rows=\"3\"\n                    >\n                    </textarea>\n                </div>\n\n                <br />\n\n                <div>\n                    <label htmlFor=\"closing\">Closing</label><br />\n                    <input\n                        name=\"closing\"\n                        id=\"closing\"\n                        type=\"text\"\n                        value={closing}\n                        onChange={event => setClosing(event.target.value)}\n                        placeholder=\"Closing\"\n                    />\n                </div>\n\n                <br />\n\n                <button className=\"button\" type=\"submit\" onClick={onSubmit}>Preview Greeting Card</button>            \n            </form>\n        </div>        \n    )\n}\n\nexport default CustomizeMessage;","import './App.css';\nimport GreetingCard from \"./Components/GreetingCard\";\nimport CustomizeMessage from './Components/CustomizeMessage';\nimport { useState} from 'react';\n\nfunction App() {\n  const query = new URLSearchParams(window.location.search);\n  const [email, setEmail] = useState('');\n  const [greeting, setGreeting] = useState(query.get(\"greeting\") || 'Dear loved one');\n  const [body, setBody] = useState(query.get(\"body\") || 'have a wonderful and joyful holiday');\n  const [closing, setClosing] = useState(query.get(\"closing\") || 'yours, with Love');\n  const [customize, setCustomize] = useState(false);\n  const [preview, setPreview] = useState(false);  \n\n  return (\n    <>\n      {customize\n        ? <CustomizeMessage\n          email={email}\n          setEmail={setEmail}\n          greeting={greeting}\n          setGreeting={setGreeting}\n          body={body}\n          setBody={setBody}\n          closing={closing}\n          setClosing={setClosing}\n          setPreview={setPreview}\n          setCustomize={setCustomize}\n        />\n        : <GreetingCard\n          email={email}\n          greeting={greeting}\n          body={body}\n          closing={closing}\n          setCustomize={setCustomize}\n          preview={preview}\n          setPreview={setPreview}\n        />\n      }\n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}